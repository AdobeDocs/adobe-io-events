(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2576],{5310:function(e,t,a){"use strict";a.r(t),a.d(t,{_frontmatter:function(){return s},default:function(){return h}});var n,i=a(22122),d=a(19756),r=(a(15007),a(64983)),l=a(99536),o=["components"],s={},m=(n="InlineAlert",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),p={_frontmatter:s},u=l.Z;function h(e){var t=e.components,a=(0,d.Z)(e,o);return(0,r.mdx)(u,(0,i.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"signature-verification-for-events"},"Signature Verification for Events"),(0,r.mdx)("p",null,"Your webhook URL must be accessible from the open internet, however this means third-party actors can send forged requests, tricking your application into handling fake events."),(0,r.mdx)("p",null,"To prevent this from happening, Adobe I/O Events has a resilient and secure event validation process in place as defined below that allows users to secure their webhook. "),(0,r.mdx)("h2",{id:"digital-signatures-for-security-verification"},"Digital Signatures for Security Verification"),(0,r.mdx)("p",null,"Adobe I/O Events does below security validations for each event delivered to your webhook. "),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Adobe I/O Events sends an additional field of ",(0,r.mdx)("inlineCode",{parentName:"li"},"recipient_client_id")," as part of your event payload."),(0,r.mdx)("li",{parentName:"ul"},"The event payload is signed digitally using a fixed public/private key pair generated by Adobe I/O Events. The digital signature is sent as a webhook request header."),(0,r.mdx)("li",{parentName:"ul"},"Adobe I/O Events sends the relative path of public key, which is served from our fixed Adobe domain ",(0,r.mdx)("a",{parentName:"li",href:"https://static.adobeioevents.com"},"static.adobeioevents.com"),", as webhook request headers.")),(0,r.mdx)("p",null,"I/O Events sends 2 digital signatures as webhook request headers and they are available via the header fields\n",(0,r.mdx)("inlineCode",{parentName:"p"},"x-adobe-digital-signature-1")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"x-adobe-digital-signature-2")," respectively."),(0,r.mdx)("p",null,"I/O Events also sends relative paths of 2 public keys corresponding to the private keys used to generate the digital signatures. These public keys are publicly accessible using our Adobe domain ",(0,r.mdx)("a",{parentName:"p",href:"https://static.adobeioevents.com"},"static.adobeioevents.com")," and the webhook request header fields ",(0,r.mdx)("inlineCode",{parentName:"p"},"x-adobe-public-key1-path")," and  ",(0,r.mdx)("inlineCode",{parentName:"p"},"x-adobe-public-key2-path")," respectively. The SDK fetches the public keys using the Adobe domain and their respective relative paths."),(0,r.mdx)("h3",{id:"verifying-the-signature"},"Verifying the Signature"),(0,r.mdx)("p",null,"Once the SDK has the public keys fetched as plain text, it verifies the digital signatures by following the steps as below"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"decrypt the message digest using the public key"),(0,r.mdx)("li",{parentName:"ul"},"compute the hash message digest of the event payload (available in the webhook request body) using the same hash function algorithm ",(0,r.mdx)("inlineCode",{parentName:"li"},"rsa-sha256")," used by I/O Events during signing"),(0,r.mdx)("li",{parentName:"ul"},"validate each signature by comparing ",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"the message digest computed by hashing "),(0,r.mdx)("li",{parentName:"ul"},"and the digest received after decrypting the signature using the public key"))),(0,r.mdx)("li",{parentName:"ul"},"verify if any one of the signatures validation is successful, then the event can be considered valid.")),(0,r.mdx)("p",null,"Below SDK method allows you to pass the received digital signature headers, relative paths of public keys and the JSON payload delivered to the webhook to check its authenticity. The JSON payload contains the ",(0,r.mdx)("inlineCode",{parentName:"p"},"recipient-client-id")," which will be matched against your own webhook registration client id passed to this SDK method. The method returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"true")," if any one of the digital signature validation is successful, otherwise it returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"false"),". "),(0,r.mdx)("p",null,"This SDK api can be used in any digital signature verification implementation for your consumer app to verify the authenticity of events coming from Adobe I/O Events.  "),(0,r.mdx)("h3",{id:"method"},"Method"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"verifyDigitalSignatureForEvent(event, recipientClientId, [signatureOptions]) ⇒ boolean\n")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Param"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"event"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("code",null,"object")),(0,r.mdx)("td",{parentName:"tr",align:null},"JSON payload delivered to the registered webhook URL")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"recipientClientId"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("code",null,"string")),(0,r.mdx)("td",{parentName:"tr",align:null},"Target recipient client id retrieved from the Adobe I/O Console integration")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"[signatureOptions]"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#SignatureOptions"},(0,r.mdx)("code",null,"SignatureOptions"))),(0,r.mdx)("td",{parentName:"tr",align:null},"Map of digital signature header fields defined in SignatureOptions")))),(0,r.mdx)("h4",{id:"signatureoptions--object"},"SignatureOptions : ",(0,r.mdx)("inlineCode",{parentName:"h4"},"object")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Properties")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"[digiSignature1]"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("code",null,"string")),(0,r.mdx)("td",{parentName:"tr",align:null},"Value of digital signature retrieved from the x-adobe-digital-signature1 header")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"[digiSignature2]"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("code",null,"string")),(0,r.mdx)("td",{parentName:"tr",align:null},"Value of digital signature retrieved from the x-adobe-digital-signature2 header")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"[publicKeyPath1]"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("code",null,"string")),(0,r.mdx)("td",{parentName:"tr",align:null},"Relative path of ioevents public key retrieved from the x-adobe-public-key1-path header")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"[publicKeyPath2]"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("code",null,"string")),(0,r.mdx)("td",{parentName:"tr",align:null},"Relative path of ioevents public key retrieved from the x-adobe-public-key2-path header")))),(0,r.mdx)("h3",{id:"sample-headers"},"Sample Headers"),(0,r.mdx)("p",null,"Headers received as part of POST to webhook URL:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-http"},"Request URL: <webhook_url>\nRequest method: POST\nContent-Type: application/json; charset=utf-8\naccept-encoding: deflate,compress,identity\nuser-agent: Adobe/1.0\nx-adobe-delivery-id: <id>\nx-adobe-event-code: <event_code>\nx-adobe-event-id: <event_id>\nx-adobe-provider: <provider_name>\nx-adobe-signature: <signature>\nx-adobe-digital-signature-1: <digital_signature_1>\nx-adobe-digital-signature-2: <digital_signature_2>\nx-adobe-public-key1-path: <public_key1_relative_path>\nx-adobe-public-key2-path: <public_key2_relative_path>\n")),(0,r.mdx)("h3",{id:"response"},"Response"),(0,r.mdx)("p",null,"If signature is valid, returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"true")," otherwise returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"false"),"."),(0,r.mdx)("h2",{id:"hmac-signatures-for-security-verification"},"HMAC Signatures for Security Verification"),(0,r.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),"I/O Events has now marked this HMAC based signature verification process as deprecated and this will finally be EOL by end of Q2'2022.",(0,r.mdx)("p",null,"Adobe I/O Events adds an ",(0,r.mdx)("inlineCode",{parentName:"p"},"x-adobe-signature")," header to each POST request it does to your webhook URL, which allows you to verify that the request was really made by Adobe I/O Events."),(0,r.mdx)("p",null,"This signature or “message authentication code” is computed using a cryptographic hash function and a secret key applied to the body of the HTTP request. In particular, a SHA256 ",(0,r.mdx)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/HMAC"},"HMAC")," is computed of the JSON payload, using your Client Secret as a secret key, and then turned into a Base64 digest. "),(0,r.mdx)("p",null,"This SDK method allows you to pass the ",(0,r.mdx)("inlineCode",{parentName:"p"},"x-adobe-signature")," header received and the JSON payload delivered to the webhook to check its authenticity. The method returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"true")," if the calculated signature matches that of the header, otherwise it returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"false"),". "),(0,r.mdx)("p",null,"This can be incorporated as part of any webhook implementation in order to verify the signature for each event received at the webhook endpoint. "),(0,r.mdx)("p",null,"For information on installing and using the SDK, please begin by reading the ",(0,r.mdx)("a",{parentName:"p",href:"sdk_getting_started.md"},"getting started guide"),"."),(0,r.mdx)("h3",{id:"method-1"},"Method"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"verifySignatureForEvent(event, clientSecret, signatureHeaderValue) ⇒ boolean\n")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"event")),(0,r.mdx)("td",{parentName:"tr",align:null},"object"),(0,r.mdx)("td",{parentName:"tr",align:null},"JSON payload delivered to the registered webhook URL.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"clientSecret")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Client Secret can be retrieved from the ",(0,r.mdx)("a",{parentName:"td",href:"https://www.adobe.com/go/devs_console_ui"},"Adobe Developer Console"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"signatureHeaderValue")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Value of ",(0,r.mdx)("inlineCode",{parentName:"td"},"x-adobe-signature")," header in each POST request to the registered webhook URL.")))),(0,r.mdx)("h3",{id:"sample-headers-1"},"Sample Headers"),(0,r.mdx)("p",null,"Headers received as part of POST to webhook URL:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-http"},"Request URL: <webhook_url>\nRequest method: POST\nContent-Type: application/json; charset=utf-8\naccept-encoding: deflate,compress,identity\nuser-agent: Adobe/1.0\nx-adobe-delivery-id: <id>\nx-adobe-event-code: <event_code>\nx-adobe-event-id: <event_id>\nx-adobe-provider: <provider_name>\nx-adobe-signature: <signature>\n")),(0,r.mdx)("h3",{id:"response-1"},"Response"),(0,r.mdx)("p",null,"If signature matches, returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"true")," otherwise returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"false"),"."))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-sdk-sdk-signature-verification-md-be0ee0ba9b9e0421e59c.js.map