{"version":3,"file":"component---src-pages-guides-runtime-webhooks-autoregistrations-md-2ed8128e83a45778d0d0.js","mappings":"kTAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,YADR,aAGA,8CAA+B,cAAGC,WAAW,IACzC,KAAQ,+DADmB,sCAA/B,uKAEsN,uBAAYA,WAAW,KAAvB,cAFtN,yRAEqiB,uBAAYA,WAAW,KAAvB,qBAFriB,MAGA,eACE,GAAM,uCADR,wCAGA,uIACA,oBACE,eAAIA,WAAW,MAAf,WAA+B,uBAAYA,WAAW,MAAvB,eAA/B,aAAoG,uBAAYA,WAAW,MAAvB,WAApG,yBAAiL,cAAGA,WAAW,KAC3L,KAAQ,+DADqK,sCAAjL,cAE6D,mBAAQA,WAAW,MAAnB,gBAAwC,uBAAYA,WAAW,UAAvB,qBAAxC,+BAC7D,eAAIA,WAAW,MAAf,YAAgC,uBAAYA,WAAW,MAAvB,4BAAhC,2BAAgI,uBAAYA,WAAW,MAAvB,2BAAhI,MACA,eAAIA,WAAW,MAAf,2BAA+C,uBAAYA,WAAW,MAAvB,WAA/C,aAAgH,uBAAYA,WAAW,MAAvB,sBAAhH,QAAuL,uBAAYA,WAAW,MAAvB,SAAvL,QAAiP,uBAAYA,WAAW,MAAvB,mBAAjP,iCAA8U,uBAAYA,WAAW,MAAvB,4BAA9U,mGACA,eAAIA,WAAW,MAAf,kDAAsE,uBAAYA,WAAW,MAAvB,sBAAtE,gBAAqJ,uBAAYA,WAAW,MAAvB,mBAArJ,+BAEF,qBAAK,iBAAMA,WAAW,OAAjB,ofAoBL,eACE,GAAM,qCADR,sCAGA,oBACE,eAAIA,WAAW,MAAf,WAA+B,uBAAYA,WAAW,MAAvB,kBAA/B,uBAEF,iKAAkJ,uBAAYA,WAAW,KAAvB,kBAAlJ,yCACA,eACE,GAAM,qCADR,sCAGA,oBACE,eAAIA,WAAW,MAAf,WAA+B,uBAAYA,WAAW,MAAvB,oBAA/B,8HAIL,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/runtime_webhooks/autoregistrations.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-io-events/adobe-io-events/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h1>\n    <p>{`The integration between `}<a parentName=\"p\" {...{\n        \"href\": \"/adobe-io-events/src/pages/guides/runtime_webhooks/index.md\"\n      }}>{`App builder project and I/O Events`}</a>{` allows to create applications that listen to Adobe events. Automatic events registrations push this concept further by subscribing your newly deployed project to `}<inlineCode parentName=\"p\">{`I/O Events`}</inlineCode>{` automatically, so you can easily deploy your application in different environments or even share your application with other organizations. Also, this technology minimizes the manual routine work for admins and reduces the possibility to mess up things during manual setup in `}<inlineCode parentName=\"p\">{`Developer Console`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"creating-self-contained-application\"\n    }}>{`Creating self-contained application`}</h2>\n    <p>{`In this chapter, we will create a code that listens to a specific event type and bind itself to this event type.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Create `}<inlineCode parentName=\"li\">{`App Builder`}</inlineCode>{` project(`}<inlineCode parentName=\"li\">{`Runtime`}</inlineCode>{`) with webhook using `}<a parentName=\"li\" {...{\n          \"href\": \"/adobe-io-events/src/pages/guides/runtime_webhooks/index.md\"\n        }}>{`App builder project and I/O Events`}</a>{` article. `}<strong parentName=\"li\">{`DON'T go to `}<inlineCode parentName=\"strong\">{`Developer Console`}</inlineCode>{` to create registrations!`}</strong></li>\n      <li parentName=\"ul\">{`Install `}<inlineCode parentName=\"li\">{`aio-cli-plugin-extension`}</inlineCode>{` plugins using AIO CLI(`}<inlineCode parentName=\"li\">{`aio plugins discover -i`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`Declare your action as `}<inlineCode parentName=\"li\">{`non-web`}</inlineCode>{` and set `}<inlineCode parentName=\"li\">{`require-adobe-auth`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` in `}<inlineCode parentName=\"li\">{`app.config.yaml`}</inlineCode>{` file. Actions deployed with `}<inlineCode parentName=\"li\">{`aio-cli-plugin-extension`}</inlineCode>{` plugin only receive events signed by Adobe I/O Events. All other invocations will be ignored.`}</li>\n      <li parentName=\"ul\">{`Define the event types you want to receive in `}<inlineCode parentName=\"li\">{`event-listener-for`}</inlineCode>{` section of `}<inlineCode parentName=\"li\">{`app.config.yaml`}</inlineCode>{` file like the following:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`application:\n  actions: actions\n  web: web-src\n  runtimeManifest:\n    packages:\n      appbuilder:\n        license: Apache-2.0\n        actions:\n          generic:\n            function: actions/generic/index.js\n            web: 'no'\n            runtime: 'nodejs:14'\n            inputs:\n              LOG_LEVEL: debug\n            annotations:\n              require-adobe-auth: false\n            relations:\n              event-listener-for:\n                - {{YOUR_EVENT_TYPE}}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploy-self-contained-application\"\n    }}>{`Deploy self-contained application`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Launch `}<inlineCode parentName=\"li\">{`aio app deploy`}</inlineCode>{` AIO CLI command.`}</li>\n    </ul>\n    <p>{`Congratulations, you just deployed the code and it's already subscribed to the specified event type. You can now share the code and repeat `}<inlineCode parentName=\"p\">{`aio app deploy`}</inlineCode>{` command on any environment you need`}</p>\n    <h2 {...{\n      \"id\": \"remove-self-contained-application\"\n    }}>{`Remove self-contained application`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Launch `}<inlineCode parentName=\"li\">{`aio app undeploy`}</inlineCode>{` AIO CLI command. This command removes the application and also removes all event registrations bound to this application`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}